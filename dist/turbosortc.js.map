{"version":3,"sources":["../turbosortc.js"],"names":["Module","moduleOverrides","key","hasOwnProperty","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","Error","window","importScripts","process","require","console","log","warn","nodeFS","nodePath","shell_read","filename","binary","ret","toString","readBinary","buffer","Uint8Array","assert","load","f","globalEval","read","length","replace","slice","module","ex","ExitStatus","print","printErr","readbuffer","data","scriptArgs","arguments","quit","status","toThrow","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","readAsync","onload","onerror","xhr_onload","shell_print","x","shell_printErr","TRY_USE_DUMP","dump","title","document","eval","call","undefined","Runtime","setTempRet0","value","tempRet0","getTempRet0","stackSave","STACKTOP","stackRestore","stackTop","getNativeTypeSize","type","QUANTUM_SIZE","bits","parseInt","substr","getNativeFieldSize","Math","max","STACK_ALIGN","prepVararg","ptr","getAlignSize","size","vararg","min","dynCall","sig","args","apply","concat","functionPointers","addFunction","func","i","removeFunction","index","warnOnce","text","shown","funcWrappers","getFuncWrapper","sigCache","dynCall_wrapper","arg","Array","prototype","getCompilerSetting","name","stackAlloc","STACK_MAX","staticAlloc","STATICTOP","staticSealed","dynamicAlloc","DYNAMICTOP_PTR","HEAP32","end","TOTAL_MEMORY","success","enlargeMemory","alignMemory","quantum","ceil","makeBigInt","low","high","unsigned","GLOBAL_BASE","__dummy__","ABORT","EXITSTATUS","condition","abort","globalScope","getCFunc","ident","e","cwrap","ccall","JSfuncs","arr","writeArrayToMemory","str","len","stringToUTF8","toC","ccallFunc","returnType","argTypes","opts","cArgs","stack","converter","async","EmterpreterAsync","state","Pointer_stringify","asyncFinalizers","push","sourceRegex","parseJSFunc","jsfunc","parsed","match","body","returnValue","JSsource","ensureJSsource","fun","cfunc","numericArgs","every","numericRet","argNames","map","funcstr","join","nargs","convertCode","cfuncname","strgfy","setValue","noSafe","charAt","HEAP8","HEAP16","tempI64","tempDouble","Math_abs","Math_min","Math_floor","Math_ceil","HEAPF32","HEAPF64","getValue","ALLOC_NORMAL","ALLOC_STACK","ALLOC_STATIC","ALLOC_DYNAMIC","ALLOC_NONE","allocate","slab","types","allocator","zeroinit","singleType","_malloc","stop","subarray","HEAPU8","set","typeSize","previousType","curr","getFunctionIndex","getMemory","runtimeInitialized","hasUtf","t","MAX_CHUNK","String","fromCharCode","AsciiToString","ch","stringToAscii","outPtr","writeAsciiToMemory","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","endPtr","decode","u0","u1","u2","u3","u4","u5","UTF8ToString","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","endIdx","u","charCodeAt","lengthBytesUTF8","UTF16Decoder","UTF16ToString","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","demangle","__cxa_demangle_func","s","buf","_free","demangleAll","regex","y","jsStackTrace","err","stackTrace","js","PAGE_SIZE","WASM_PAGE_SIZE","ASMJS_PAGE_SIZE","MIN_TOTAL_MEMORY","alignUp","multiple","HEAP","HEAPU16","HEAPU32","updateGlobalBuffer","updateGlobalBufferViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","STATIC_BASE","STACK_BASE","DYNAMIC_BASE","writeStackCookie","checkStackCookie","abortStackOverflow","allocSize","abortOnCannotGrowMemory","TOTAL_STACK","byteLength","WebAssembly","Memory","ArrayBuffer","getTotalMemory","callRuntimeCallbacks","callbacks","callback","shift","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATEXIT__","__ATPOSTRUN__","runtimeExited","preRun","addOnPreRun","ensureInitRuntime","preMain","exitRuntime","postRun","addOnPostRun","cb","unshift","addOnInit","addOnPreMain","addOnExit","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","intArrayToString","array","chr","writeStringToMemory","string","lastChar","Infinity","unSign","ignore","abs","pow","reSign","half","imul","a","b","ah","al","bh","bl","froundBuffer","fround","clz32","floor","trunc","Math_cos","cos","Math_sin","sin","Math_tan","tan","Math_acos","acos","Math_asin","asin","Math_atan","atan","Math_atan2","atan2","Math_exp","exp","Math_log","Math_sqrt","sqrt","Math_pow","Math_imul","Math_fround","Math_round","round","Math_clz32","Math_trunc","runDependencies","runDependencyWatcher","dependenciesFulfilled","runDependencyTracking","getUniqueRunDependency","id","orig","random","addRunDependency","setInterval","clearInterval","dep","removeRunDependency","memoryInitializer","FS","error","init","createDataFile","createPreloadedFile","createLazyFile","mkdev","registerDevice","analyzePath","loadFilesFromDB","ErrnoError","integrateWasmJS","method","wasmTextFile","wasmBinaryFile","asmjsCodeFile","wasmPageSize","asm2wasmImports","info","exports","lookupImport","mod","base","lookup","indexOf","parts","split","mergeMemory","newBuffer","oldBuffer","oldView","newView","WasmTypes","none","i32","i64","f32","f64","fixImports","imports","fixed","getBinary","getBinaryPromise","fetch","credentials","then","Promise","resolve","reject","doJustAsm","global","env","providedBuffer","methodHandler","doNativeWasm","NaN","receiveInstance","instance","memory","instantiate","output","catch","reason","doWasmPolyfill","WasmJS","wasmJS","code","temp","asmjsReallocBuffer","wasmReallocBuffer","PAGE_MULTIPLE","old","oldSize","result","grow","finalMethod","TABLE_SIZE","MAX_TABLE_SIZE","Table","element","methods","ASM_CONSTS","STATIC_BUMP","tempDoublePtr","copyTempFloat","copyTempDouble","___setErrNo","_sbrk","_memset","___lock","_emscripten_memcpy_big","dest","src","num","_memcpy","_abort","_llvm_bswap_i32","SYSCALLS","varargs","get","getStr","get64","getZero","___syscall140","which","stream","getStreamFromFD","offset_high","offset_low","whence","offset","llseek","position","getdents","errno","___syscall146","iov","iovcnt","buffers","printChar","j","___syscall54","___unlock","___syscall6","close","fflush","nullFunc_ii","nullFunc_iiii","invoke_ii","a1","invoke_iiii","a2","a3","asmGlobalArg","asmLibraryArg","asm","real__malloc","real_getTempRet0","real__turbosort","real__fflush","real__main","real_setTempRet0","real_establishStackSpace","real_stackSave","real__sbrk","real__emscripten_get_global_libc","real____errno_location","real_setThrew","real__free","real_stackAlloc","real_stackRestore","real__llvm_bswap_i32","_turbosort","_fflush","_main","establishStackSpace","_emscripten_get_global_libc","___errno_location","setThrew","runPostSets","dynCall_ii","dynCall_iiii","doBrowserLoad","applyMemoryInitializer","useRequest","request","setTimeout","addEventListener","message","constructor","initialStackTop","preloadStartTime","calledMain","runCaller","run","callMain","argc","pad","argv","exit","toLog","Date","now","doRun","shouldRunNow","implicit","abortDecorators","what","JSON","stringify","extra","forEach","decorator","pop"],"mappings":"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","file":"turbosortc.js","sourcesContent":["// The Module object: Our interface to the outside world. We import\n// and export values on it, and do the work to get that through\n// closure compiler if necessary. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to do an eval in order to handle the closure compiler\n// case, where this code here is minified but Module was defined\n// elsewhere (e.g. case 4 above). We also need to check if Module\n// already exists (e.g. case 3 above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module;\nif (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = {};\nfor (var key in Module) {\n  if (Module.hasOwnProperty(key)) {\n    moduleOverrides[key] = Module[key];\n  }\n}\n\n// The environment setup code below is customized to use Module.\n// *** Environment setup code ***\nvar ENVIRONMENT_IS_WEB = false;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\n\n// Three configurations we can be running in:\n// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\n// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\n// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\n\nif (Module['ENVIRONMENT']) {\n  if (Module['ENVIRONMENT'] === 'WEB') {\n    ENVIRONMENT_IS_WEB = true;\n  } else if (Module['ENVIRONMENT'] === 'WORKER') {\n    ENVIRONMENT_IS_WORKER = true;\n  } else if (Module['ENVIRONMENT'] === 'NODE') {\n    ENVIRONMENT_IS_NODE = true;\n  } else if (Module['ENVIRONMENT'] === 'SHELL') {\n    ENVIRONMENT_IS_SHELL = true;\n  } else {\n    throw new Error('The provided Module[\\'ENVIRONMENT\\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');\n  }\n} else {\n  ENVIRONMENT_IS_WEB = typeof window === 'object';\n  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';\n  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\n  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n}\n\n\nif (ENVIRONMENT_IS_NODE) {\n  // Expose functionality in the same simple way that the shells work\n  // Note that we pollute the global namespace here, otherwise we break in node\n  if (!Module['print']) Module['print'] = console.log;\n  if (!Module['printErr']) Module['printErr'] = console.warn;\n\n  var nodeFS;\n  var nodePath;\n\n  Module['read'] = function shell_read(filename, binary) {\n    if (!nodeFS) nodeFS = require('fs');\n    if (!nodePath) nodePath = require('path');\n    filename = nodePath['normalize'](filename);\n    var ret = nodeFS['readFileSync'](filename);\n    return binary ? ret : ret.toString();\n  };\n\n  Module['readBinary'] = function readBinary(filename) {\n    var ret = Module['read'](filename, true);\n    if (!ret.buffer) {\n      ret = new Uint8Array(ret);\n    }\n    assert(ret.buffer);\n    return ret;\n  };\n\n  Module['load'] = function load(f) {\n    globalEval(read(f));\n  };\n\n  if (!Module['thisProgram']) {\n    if (process['argv'].length > 1) {\n      Module['thisProgram'] = process['argv'][1].replace(/\\\\/g, '/');\n    } else {\n      Module['thisProgram'] = 'unknown-program';\n    }\n  }\n\n  Module['arguments'] = process['argv'].slice(2);\n\n  if (typeof module !== 'undefined') {\n    module['exports'] = Module;\n  }\n\n  process['on']('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (!(ex instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n}\nelse if (ENVIRONMENT_IS_SHELL) {\n  if (!Module['print']) Module['print'] = print;\n  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm\n\n  if (typeof read != 'undefined') {\n    Module['read'] = read;\n  } else {\n    Module['read'] = function shell_read() { throw 'no read() available' };\n  }\n\n  Module['readBinary'] = function readBinary(f) {\n    if (typeof readbuffer === 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    var data = read(f, 'binary');\n    assert(typeof data === 'object');\n    return data;\n  };\n\n  if (typeof scriptArgs != 'undefined') {\n    Module['arguments'] = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    Module['arguments'] = arguments;\n  }\n\n  if (typeof quit === 'function') {\n    Module['quit'] = function(status, toThrow) {\n      quit(status);\n    }\n  }\n\n}\nelse if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  Module['read'] = function shell_read(url) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, false);\n    xhr.send(null);\n    return xhr.responseText;\n  };\n\n  if (ENVIRONMENT_IS_WORKER) {\n    Module['readBinary'] = function readBinary(url) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.responseType = 'arraybuffer';\n      xhr.send(null);\n      return new Uint8Array(xhr.response);\n    };\n  }\n\n  Module['readAsync'] = function readAsync(url, onload, onerror) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = function xhr_onload() {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n      } else {\n        onerror();\n      }\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  };\n\n  if (typeof arguments != 'undefined') {\n    Module['arguments'] = arguments;\n  }\n\n  if (typeof console !== 'undefined') {\n    if (!Module['print']) Module['print'] = function shell_print(x) {\n      console.log(x);\n    };\n    if (!Module['printErr']) Module['printErr'] = function shell_printErr(x) {\n      console.warn(x);\n    };\n  } else {\n    // Probably a worker, and without console.log. We can do very little here...\n    var TRY_USE_DUMP = false;\n    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== \"undefined\") ? (function(x) {\n      dump(x);\n    }) : (function(x) {\n      // self.postMessage(x); // enable this if you want stdout to be sent as messages\n    }));\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    Module['load'] = importScripts;\n  }\n\n  if (typeof Module['setWindowTitle'] === 'undefined') {\n    Module['setWindowTitle'] = function(title) { document.title = title };\n  }\n}\nelse {\n  // Unreachable because SHELL is dependant on the others\n  throw 'Unknown runtime environment. Where are we?';\n}\n\nfunction globalEval(x) {\n  eval.call(null, x);\n}\nif (!Module['load'] && Module['read']) {\n  Module['load'] = function load(f) {\n    globalEval(Module['read'](f));\n  };\n}\nif (!Module['print']) {\n  Module['print'] = function(){};\n}\nif (!Module['printErr']) {\n  Module['printErr'] = Module['print'];\n}\nif (!Module['arguments']) {\n  Module['arguments'] = [];\n}\nif (!Module['thisProgram']) {\n  Module['thisProgram'] = './this.program';\n}\nif (!Module['quit']) {\n  Module['quit'] = function(status, toThrow) {\n    throw toThrow;\n  }\n}\n\n// *** Environment setup code ***\n\n// Closure helpers\nModule.print = Module['print'];\nModule.printErr = Module['printErr'];\n\n// Callbacks\nModule['preRun'] = [];\nModule['postRun'] = [];\n\n// Merge back in the overrides\nfor (var key in moduleOverrides) {\n  if (moduleOverrides.hasOwnProperty(key)) {\n    Module[key] = moduleOverrides[key];\n  }\n}\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = undefined;\n\n\n\n// {{PREAMBLE_ADDITIONS}}\n\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\n//========================================\n// Runtime code shared with compiler\n//========================================\n\nvar Runtime = {\n  setTempRet0: function (value) {\n    tempRet0 = value;\n    return value;\n  },\n  getTempRet0: function () {\n    return tempRet0;\n  },\n  stackSave: function () {\n    return STACKTOP;\n  },\n  stackRestore: function (stackTop) {\n    STACKTOP = stackTop;\n  },\n  getNativeTypeSize: function (type) {\n    switch (type) {\n      case 'i1': case 'i8': return 1;\n      case 'i16': return 2;\n      case 'i32': return 4;\n      case 'i64': return 8;\n      case 'float': return 4;\n      case 'double': return 8;\n      default: {\n        if (type[type.length-1] === '*') {\n          return Runtime.QUANTUM_SIZE; // A pointer\n        } else if (type[0] === 'i') {\n          var bits = parseInt(type.substr(1));\n          assert(bits % 8 === 0);\n          return bits/8;\n        } else {\n          return 0;\n        }\n      }\n    }\n  },\n  getNativeFieldSize: function (type) {\n    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);\n  },\n  STACK_ALIGN: 16,\n  prepVararg: function (ptr, type) {\n    if (type === 'double' || type === 'i64') {\n      // move so the load is aligned\n      if (ptr & 7) {\n        assert((ptr & 7) === 4);\n        ptr += 4;\n      }\n    } else {\n      assert((ptr & 3) === 0);\n    }\n    return ptr;\n  },\n  getAlignSize: function (type, size, vararg) {\n    // we align i64s and doubles on 64-bit boundaries, unlike x86\n    if (!vararg && (type == 'i64' || type == 'double')) return 8;\n    if (!type) return Math.min(size, 8); // align structures internally to 64 bits\n    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);\n  },\n  dynCall: function (sig, ptr, args) {\n    if (args && args.length) {\n      assert(args.length == sig.length-1);\n      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \\'' + sig + '\\'');\n      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));\n    } else {\n      assert(sig.length == 1);\n      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \\'' + sig + '\\'');\n      return Module['dynCall_' + sig].call(null, ptr);\n    }\n  },\n  functionPointers: [],\n  addFunction: function (func) {\n    for (var i = 0; i < Runtime.functionPointers.length; i++) {\n      if (!Runtime.functionPointers[i]) {\n        Runtime.functionPointers[i] = func;\n        return 2*(1 + i);\n      }\n    }\n    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';\n  },\n  removeFunction: function (index) {\n    Runtime.functionPointers[(index-2)/2] = null;\n  },\n  warnOnce: function (text) {\n    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};\n    if (!Runtime.warnOnce.shown[text]) {\n      Runtime.warnOnce.shown[text] = 1;\n      Module.printErr(text);\n    }\n  },\n  funcWrappers: {},\n  getFuncWrapper: function (func, sig) {\n    assert(sig);\n    if (!Runtime.funcWrappers[sig]) {\n      Runtime.funcWrappers[sig] = {};\n    }\n    var sigCache = Runtime.funcWrappers[sig];\n    if (!sigCache[func]) {\n      // optimize away arguments usage in common cases\n      if (sig.length === 1) {\n        sigCache[func] = function dynCall_wrapper() {\n          return Runtime.dynCall(sig, func);\n        };\n      } else if (sig.length === 2) {\n        sigCache[func] = function dynCall_wrapper(arg) {\n          return Runtime.dynCall(sig, func, [arg]);\n        };\n      } else {\n        // general case\n        sigCache[func] = function dynCall_wrapper() {\n          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));\n        };\n      }\n    }\n    return sigCache[func];\n  },\n  getCompilerSetting: function (name) {\n    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';\n  },\n  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },\n  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },\n  dynamicAlloc: function (size) { assert(DYNAMICTOP_PTR);var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},\n  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },\n  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },\n  GLOBAL_BASE: 1024,\n  QUANTUM_SIZE: 4,\n  __dummy__: 0\n}\n\n\n\nModule[\"Runtime\"] = Runtime;\n\n\n\n//========================================\n// Runtime essentials\n//========================================\n\nvar ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()\nvar EXITSTATUS = 0;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed: ' + text);\n  }\n}\n\nvar globalScope = this;\n\n// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)\nfunction getCFunc(ident) {\n  var func = Module['_' + ident]; // closure exported function\n  if (!func) {\n    try { func = eval('_' + ident); } catch(e) {}\n  }\n  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');\n  return func;\n}\n\nvar cwrap, ccall;\n(function(){\n  var JSfuncs = {\n    // Helpers for cwrap -- it can't refer to Runtime directly because it might\n    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find\n    // out what the minified function name is.\n    'stackSave': function() {\n      Runtime.stackSave()\n    },\n    'stackRestore': function() {\n      Runtime.stackRestore()\n    },\n    // type conversion from js to c\n    'arrayToC' : function(arr) {\n      var ret = Runtime.stackAlloc(arr.length);\n      writeArrayToMemory(arr, ret);\n      return ret;\n    },\n    'stringToC' : function(str) {\n      var ret = 0;\n      if (str !== null && str !== undefined && str !== 0) { // null string\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n        var len = (str.length << 2) + 1;\n        ret = Runtime.stackAlloc(len);\n        stringToUTF8(str, ret, len);\n      }\n      return ret;\n    }\n  };\n  // For fast lookup of conversion functions\n  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};\n\n  // C calling interface.\n  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {\n    var func = getCFunc(ident);\n    var cArgs = [];\n    var stack = 0;\n    assert(returnType !== 'array', 'Return type should not be \"array\".');\n    if (args) {\n      for (var i = 0; i < args.length; i++) {\n        var converter = toC[argTypes[i]];\n        if (converter) {\n          if (stack === 0) stack = Runtime.stackSave();\n          cArgs[i] = converter(args[i]);\n        } else {\n          cArgs[i] = args[i];\n        }\n      }\n    }\n    var ret = func.apply(null, cArgs);\n    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {\n      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');\n    }\n    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');\n    if (returnType === 'string') ret = Pointer_stringify(ret);\n    if (stack !== 0) {\n      if (opts && opts.async) {\n        EmterpreterAsync.asyncFinalizers.push(function() {\n          Runtime.stackRestore(stack);\n        });\n        return;\n      }\n      Runtime.stackRestore(stack);\n    }\n    return ret;\n  }\n\n  var sourceRegex = /^function\\s*[a-zA-Z$_0-9]*\\s*\\(([^)]*)\\)\\s*{\\s*([^*]*?)[\\s;]*(?:return\\s*(.*?)[;\\s]*)?}$/;\n  function parseJSFunc(jsfunc) {\n    // Match the body and the return value of a javascript function source\n    var parsed = jsfunc.toString().match(sourceRegex).slice(1);\n    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}\n  }\n\n  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file\n  var JSsource = null;\n  function ensureJSsource() {\n    if (!JSsource) {\n      JSsource = {};\n      for (var fun in JSfuncs) {\n        if (JSfuncs.hasOwnProperty(fun)) {\n          // Elements of toCsource are arrays of three items:\n          // the code, and the return value\n          JSsource[fun] = parseJSFunc(JSfuncs[fun]);\n        }\n      }\n    }\n  }\n\n  cwrap = function cwrap(ident, returnType, argTypes) {\n    argTypes = argTypes || [];\n    var cfunc = getCFunc(ident);\n    // When the function takes numbers and returns a number, we can just return\n    // the original function\n    var numericArgs = argTypes.every(function(type){ return type === 'number'});\n    var numericRet = (returnType !== 'string');\n    if ( numericRet && numericArgs) {\n      return cfunc;\n    }\n    // Creation of the arguments list ([\"$1\",\"$2\",...,\"$nargs\"])\n    var argNames = argTypes.map(function(x,i){return '$'+i});\n    var funcstr = \"(function(\" + argNames.join(',') + \") {\";\n    var nargs = argTypes.length;\n    if (!numericArgs) {\n      // Generate the code needed to convert the arguments from javascript\n      // values to pointers\n      ensureJSsource();\n      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';\n      for (var i = 0; i < nargs; i++) {\n        var arg = argNames[i], type = argTypes[i];\n        if (type === 'number') continue;\n        var convertCode = JSsource[type + 'ToC']; // [code, return]\n        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';\n        funcstr += convertCode.body + ';';\n        funcstr += arg + '=(' + convertCode.returnValue + ');';\n      }\n    }\n\n    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore\n    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;\n    // Call the function\n    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';\n    if (!numericRet) { // Return type can only by 'string' or 'number'\n      // Convert the result to a string\n      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;\n      funcstr += 'ret = ' + strgfy + '(ret);';\n    }\n    funcstr += \"if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }\";\n    if (!numericArgs) {\n      // If we had a stack, restore it\n      ensureJSsource();\n      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';\n    }\n    funcstr += 'return ret})';\n    return eval(funcstr);\n  };\n})();\nModule[\"ccall\"] = ccall;\nModule[\"cwrap\"] = cwrap;\n\n/** @type {function(number, number, string, boolean=)} */\nfunction setValue(ptr, value, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': HEAP8[((ptr)>>0)]=value; break;\n      case 'i8': HEAP8[((ptr)>>0)]=value; break;\n      case 'i16': HEAP16[((ptr)>>1)]=value; break;\n      case 'i32': HEAP32[((ptr)>>2)]=value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)]=value; break;\n      case 'double': HEAPF64[((ptr)>>3)]=value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n}\nModule[\"setValue\"] = setValue;\n\n/** @type {function(number, string, boolean=)} */\nfunction getValue(ptr, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      default: abort('invalid type for setValue: ' + type);\n    }\n  return null;\n}\nModule[\"getValue\"] = getValue;\n\nvar ALLOC_NORMAL = 0; // Tries to use _malloc()\nvar ALLOC_STACK = 1; // Lives for the duration of the current function call\nvar ALLOC_STATIC = 2; // Cannot be freed\nvar ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk\nvar ALLOC_NONE = 4; // Do not allocate\nModule[\"ALLOC_NORMAL\"] = ALLOC_NORMAL;\nModule[\"ALLOC_STACK\"] = ALLOC_STACK;\nModule[\"ALLOC_STATIC\"] = ALLOC_STATIC;\nModule[\"ALLOC_DYNAMIC\"] = ALLOC_DYNAMIC;\nModule[\"ALLOC_NONE\"] = ALLOC_NONE;\n\n// allocate(): This is for internal use. You can use it yourself as well, but the interface\n//             is a little tricky (see docs right below). The reason is that it is optimized\n//             for multiple syntaxes to save space in generated code. So you should\n//             normally not use allocate(), and instead allocate memory using _malloc(),\n//             initialize it with setValue(), and so forth.\n// @slab: An array of data, or a number. If a number, then the size of the block to allocate,\n//        in *bytes* (note that this is sometimes confusing: the next parameter does not\n//        affect this!)\n// @types: Either an array of types, one for each byte (or 0 if no type at that position),\n//         or a single type which is used for the entire block. This only matters if there\n//         is initial data - if @slab is a number, then this does not matter at all and is\n//         ignored.\n// @allocator: How to allocate memory, see ALLOC_*\n/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */\nfunction allocate(slab, types, allocator, ptr) {\n  var zeroinit, size;\n  if (typeof slab === 'number') {\n    zeroinit = true;\n    size = slab;\n  } else {\n    zeroinit = false;\n    size = slab.length;\n  }\n\n  var singleType = typeof types === 'string' ? types : null;\n\n  var ret;\n  if (allocator == ALLOC_NONE) {\n    ret = ptr;\n  } else {\n    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));\n  }\n\n  if (zeroinit) {\n    var ptr = ret, stop;\n    assert((ret & 3) == 0);\n    stop = ret + (size & ~3);\n    for (; ptr < stop; ptr += 4) {\n      HEAP32[((ptr)>>2)]=0;\n    }\n    stop = ret + size;\n    while (ptr < stop) {\n      HEAP8[((ptr++)>>0)]=0;\n    }\n    return ret;\n  }\n\n  if (singleType === 'i8') {\n    if (slab.subarray || slab.slice) {\n      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);\n    } else {\n      HEAPU8.set(new Uint8Array(slab), ret);\n    }\n    return ret;\n  }\n\n  var i = 0, type, typeSize, previousType;\n  while (i < size) {\n    var curr = slab[i];\n\n    if (typeof curr === 'function') {\n      curr = Runtime.getFunctionIndex(curr);\n    }\n\n    type = singleType || types[i];\n    if (type === 0) {\n      i++;\n      continue;\n    }\n    assert(type, 'Must know what type to store in allocate!');\n\n    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later\n\n    setValue(ret+i, curr, type);\n\n    // no need to look up size unless type changes, so cache it\n    if (previousType !== type) {\n      typeSize = Runtime.getNativeTypeSize(type);\n      previousType = type;\n    }\n    i += typeSize;\n  }\n\n  return ret;\n}\nModule[\"allocate\"] = allocate;\n\n// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready\nfunction getMemory(size) {\n  if (!staticSealed) return Runtime.staticAlloc(size);\n  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);\n  return _malloc(size);\n}\nModule[\"getMemory\"] = getMemory;\n\n/** @type {function(number, number=)} */\nfunction Pointer_stringify(ptr, length) {\n  if (length === 0 || !ptr) return '';\n  // TODO: use TextDecoder\n  // Find the length, and check for UTF while doing so\n  var hasUtf = 0;\n  var t;\n  var i = 0;\n  while (1) {\n    assert(ptr + i < TOTAL_MEMORY);\n    t = HEAPU8[(((ptr)+(i))>>0)];\n    hasUtf |= t;\n    if (t == 0 && !length) break;\n    i++;\n    if (length && i == length) break;\n  }\n  if (!length) length = i;\n\n  var ret = '';\n\n  if (hasUtf < 128) {\n    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack\n    var curr;\n    while (length > 0) {\n      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));\n      ret = ret ? ret + curr : curr;\n      ptr += MAX_CHUNK;\n      length -= MAX_CHUNK;\n    }\n    return ret;\n  }\n  return Module['UTF8ToString'](ptr);\n}\nModule[\"Pointer_stringify\"] = Pointer_stringify;\n\n// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nfunction AsciiToString(ptr) {\n  var str = '';\n  while (1) {\n    var ch = HEAP8[((ptr++)>>0)];\n    if (!ch) return str;\n    str += String.fromCharCode(ch);\n  }\n}\nModule[\"AsciiToString\"] = AsciiToString;\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.\n\nfunction stringToAscii(str, outPtr) {\n  return writeAsciiToMemory(str, outPtr, false);\n}\nModule[\"stringToAscii\"] = stringToAscii;\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;\nfunction UTF8ArrayToString(u8Array, idx) {\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  while (u8Array[endPtr]) ++endPtr;\n\n  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\n  } else {\n    var u0, u1, u2, u3, u4, u5;\n\n    var str = '';\n    while (1) {\n      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n      u0 = u8Array[idx++];\n      if (!u0) return str;\n      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n      u1 = u8Array[idx++] & 63;\n      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n      u2 = u8Array[idx++] & 63;\n      if ((u0 & 0xF0) == 0xE0) {\n        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n      } else {\n        u3 = u8Array[idx++] & 63;\n        if ((u0 & 0xF8) == 0xF0) {\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;\n        } else {\n          u4 = u8Array[idx++] & 63;\n          if ((u0 & 0xFC) == 0xF8) {\n            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;\n          } else {\n            u5 = u8Array[idx++] & 63;\n            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;\n          }\n        }\n      }\n      if (u0 < 0x10000) {\n        str += String.fromCharCode(u0);\n      } else {\n        var ch = u0 - 0x10000;\n        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n      }\n    }\n  }\n}\nModule[\"UTF8ArrayToString\"] = UTF8ArrayToString;\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nfunction UTF8ToString(ptr) {\n  return UTF8ArrayToString(HEAPU8,ptr);\n}\nModule[\"UTF8ToString\"] = UTF8ToString;\n\n// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',\n// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.\n//   outIdx: The starting offset in the array to begin the copying.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.\n    return 0;\n\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      outU8Array[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      outU8Array[outIdx++] = 0xC0 | (u >> 6);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      outU8Array[outIdx++] = 0xE0 | (u >> 12);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0x1FFFFF) {\n      if (outIdx + 3 >= endIdx) break;\n      outU8Array[outIdx++] = 0xF0 | (u >> 18);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0x3FFFFFF) {\n      if (outIdx + 4 >= endIdx) break;\n      outU8Array[outIdx++] = 0xF8 | (u >> 24);\n      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else {\n      if (outIdx + 5 >= endIdx) break;\n      outU8Array[outIdx++] = 0xFC | (u >> 30);\n      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  outU8Array[outIdx] = 0;\n  return outIdx - startIdx;\n}\nModule[\"stringToUTF8Array\"] = stringToUTF8Array;\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n}\nModule[\"stringToUTF8\"] = stringToUTF8;\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\n    if (u <= 0x7F) {\n      ++len;\n    } else if (u <= 0x7FF) {\n      len += 2;\n    } else if (u <= 0xFFFF) {\n      len += 3;\n    } else if (u <= 0x1FFFFF) {\n      len += 4;\n    } else if (u <= 0x3FFFFFF) {\n      len += 5;\n    } else {\n      len += 6;\n    }\n  }\n  return len;\n}\nModule[\"lengthBytesUTF8\"] = lengthBytesUTF8;\n\n// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;\nfunction UTF16ToString(ptr) {\n  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n  var endPtr = ptr;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  var idx = endPtr >> 1;\n  while (HEAP16[idx]) ++idx;\n  endPtr = idx << 1;\n\n  if (endPtr - ptr > 32 && UTF16Decoder) {\n    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  } else {\n    var i = 0;\n\n    var str = '';\n    while (1) {\n      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n      if (codeUnit == 0) return str;\n      ++i;\n      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.\n      str += String.fromCharCode(codeUnit);\n    }\n  }\n}\n\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.\n// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 2) return 0;\n  maxBytesToWrite -= 2; // Null terminator.\n  var startPtr = outPtr;\n  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n  for (var i = 0; i < numCharsToWrite; ++i) {\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    HEAP16[((outPtr)>>1)]=codeUnit;\n    outPtr += 2;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP16[((outPtr)>>1)]=0;\n  return outPtr - startPtr;\n}\n\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF16(str) {\n  return str.length*2;\n}\n\n\nfunction UTF32ToString(ptr) {\n  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n  var i = 0;\n\n  var str = '';\n  while (1) {\n    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n    if (utf32 == 0)\n      return str;\n    ++i;\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    if (utf32 >= 0x10000) {\n      var ch = utf32 - 0x10000;\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n    } else {\n      str += String.fromCharCode(utf32);\n    }\n  }\n}\n\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.\n// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 4) return 0;\n  var startPtr = outPtr;\n  var endPtr = startPtr + maxBytesToWrite - 4;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n      var trailSurrogate = str.charCodeAt(++i);\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n    }\n    HEAP32[((outPtr)>>2)]=codeUnit;\n    outPtr += 4;\n    if (outPtr + 4 > endPtr) break;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP32[((outPtr)>>2)]=0;\n  return outPtr - startPtr;\n}\n\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF32(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i);\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n    len += 4;\n  }\n\n  return len;\n}\n\n\nfunction demangle(func) {\n  var __cxa_demangle_func = Module['___cxa_demangle'] || Module['__cxa_demangle'];\n  if (__cxa_demangle_func) {\n    try {\n      var s =\n        func.substr(1);\n      var len = lengthBytesUTF8(s)+1;\n      var buf = _malloc(len);\n      stringToUTF8(s, buf, len);\n      var status = _malloc(4);\n      var ret = __cxa_demangle_func(buf, 0, 0, status);\n      if (getValue(status, 'i32') === 0 && ret) {\n        return Pointer_stringify(ret);\n      }\n      // otherwise, libcxxabi failed\n    } catch(e) {\n      // ignore problems here\n    } finally {\n      if (buf) _free(buf);\n      if (status) _free(status);\n      if (ret) _free(ret);\n    }\n    // failure when using libcxxabi, don't demangle\n    return func;\n  }\n  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');\n  return func;\n}\n\nfunction demangleAll(text) {\n  var regex =\n    /__Z[\\w\\d_]+/g;\n  return text.replace(regex,\n    function(x) {\n      var y = demangle(x);\n      return x === y ? x : (x + ' [' + y + ']');\n    });\n}\n\nfunction jsStackTrace() {\n  var err = new Error();\n  if (!err.stack) {\n    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,\n    // so try that as a special-case.\n    try {\n      throw new Error(0);\n    } catch(e) {\n      err = e;\n    }\n    if (!err.stack) {\n      return '(no stack trace available)';\n    }\n  }\n  return err.stack.toString();\n}\n\nfunction stackTrace() {\n  var js = jsStackTrace();\n  if (Module['extraStackTrace']) js += '\\n' + Module['extraStackTrace']();\n  return demangleAll(js);\n}\nModule[\"stackTrace\"] = stackTrace;\n\n// Memory management\n\nvar PAGE_SIZE = 16384;\nvar WASM_PAGE_SIZE = 65536;\nvar ASMJS_PAGE_SIZE = 16777216;\nvar MIN_TOTAL_MEMORY = 16777216;\n\nfunction alignUp(x, multiple) {\n  if (x % multiple > 0) {\n    x += multiple - (x % multiple);\n  }\n  return x;\n}\n\nvar HEAP,\n/** @type {ArrayBuffer} */\n  buffer,\n/** @type {Int8Array} */\n  HEAP8,\n/** @type {Uint8Array} */\n  HEAPU8,\n/** @type {Int16Array} */\n  HEAP16,\n/** @type {Uint16Array} */\n  HEAPU16,\n/** @type {Int32Array} */\n  HEAP32,\n/** @type {Uint32Array} */\n  HEAPU32,\n/** @type {Float32Array} */\n  HEAPF32,\n/** @type {Float64Array} */\n  HEAPF64;\n\nfunction updateGlobalBuffer(buf) {\n  Module['buffer'] = buffer = buf;\n}\n\nfunction updateGlobalBufferViews() {\n  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);\n  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);\n  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);\n}\n\nvar STATIC_BASE, STATICTOP, staticSealed; // static area\nvar STACK_BASE, STACKTOP, STACK_MAX; // stack area\nvar DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk\n\n  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;\n  staticSealed = false;\n\n\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  assert((STACK_MAX & 3) == 0);\n  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;\n  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;\n}\n\nfunction checkStackCookie() {\n  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));\n  }\n  // Also test the global address 0 for integrity. This check is not compatible with SAFE_SPLIT_MEMORY though, since that mode already tests all address 0 accesses on its own.\n  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';\n}\n\nfunction abortStackOverflow(allocSize) {\n  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - Module['asm'].stackSave() + allocSize) + ' bytes available!');\n}\n\nfunction abortOnCannotGrowMemory() {\n  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');\n}\n\n\nfunction enlargeMemory() {\n  abortOnCannotGrowMemory();\n}\n\n\nvar TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;\nvar TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 67108864;\nif (TOTAL_MEMORY < TOTAL_STACK) Module.printErr('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');\n\n// Initialize the runtime's memory\n// check for full engine support (use string 'subarray' to avoid closure compiler confusion)\nassert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,\n       'JS engine does not provide full typed array support');\n\n\n\n// Use a provided buffer, if there is one, or else allocate a new one\nif (Module['buffer']) {\n  buffer = Module['buffer'];\n  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);\n} else {\n  // Use a WebAssembly memory where available\n  if (typeof WebAssembly === 'object' && typeof WebAssembly.Memory === 'function') {\n    assert(TOTAL_MEMORY % WASM_PAGE_SIZE === 0);\n    Module['wasmMemory'] = new WebAssembly.Memory({ 'initial': TOTAL_MEMORY / WASM_PAGE_SIZE, 'maximum': TOTAL_MEMORY / WASM_PAGE_SIZE });\n    buffer = Module['wasmMemory'].buffer;\n  } else\n  {\n    buffer = new ArrayBuffer(TOTAL_MEMORY);\n  }\n  assert(buffer.byteLength === TOTAL_MEMORY);\n}\nupdateGlobalBufferViews();\n\n\nfunction getTotalMemory() {\n  return TOTAL_MEMORY;\n}\n\n// Endianness check (note: assumes compiler arch was little-endian)\n  HEAP32[0] = 0x63736d65; /* 'emsc' */\nHEAP16[1] = 0x6373;\nif (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';\n\nModule['HEAP'] = HEAP;\nModule['buffer'] = buffer;\nModule['HEAP8'] = HEAP8;\nModule['HEAP16'] = HEAP16;\nModule['HEAP32'] = HEAP32;\nModule['HEAPU8'] = HEAPU8;\nModule['HEAPU16'] = HEAPU16;\nModule['HEAPU32'] = HEAPU32;\nModule['HEAPF32'] = HEAPF32;\nModule['HEAPF64'] = HEAPF64;\n\nfunction callRuntimeCallbacks(callbacks) {\n  while(callbacks.length > 0) {\n    var callback = callbacks.shift();\n    if (typeof callback == 'function') {\n      callback();\n      continue;\n    }\n    var func = callback.func;\n    if (typeof func === 'number') {\n      if (callback.arg === undefined) {\n        Module['dynCall_v'](func);\n      } else {\n        Module['dynCall_vi'](func, callback.arg);\n      }\n    } else {\n      func(callback.arg === undefined ? null : callback.arg);\n    }\n  }\n}\n\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the runtime has exited\n\nvar runtimeInitialized = false;\nvar runtimeExited = false;\n\n\nfunction preRun() {\n  // compatibility - merge in anything from Module['preRun'] at this time\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction ensureInitRuntime() {\n  checkStackCookie();\n  if (runtimeInitialized) return;\n  runtimeInitialized = true;\n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  checkStackCookie();\n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction exitRuntime() {\n  checkStackCookie();\n  callRuntimeCallbacks(__ATEXIT__);\n  runtimeExited = true;\n}\n\nfunction postRun() {\n  checkStackCookie();\n  // compatibility - merge in anything from Module['postRun'] at this time\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\nModule[\"addOnPreRun\"] = addOnPreRun;\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\nModule[\"addOnInit\"] = addOnInit;\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\nModule[\"addOnPreMain\"] = addOnPreMain;\n\nfunction addOnExit(cb) {\n  __ATEXIT__.unshift(cb);\n}\nModule[\"addOnExit\"] = addOnExit;\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\nModule[\"addOnPostRun\"] = addOnPostRun;\n\n// Tools\n\n/** @type {function(string, boolean=, number=)} */\nfunction intArrayFromString(stringy, dontAddNull, length) {\n  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n  var u8array = new Array(len);\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n  if (dontAddNull) u8array.length = numBytesWritten;\n  return u8array;\n}\nModule[\"intArrayFromString\"] = intArrayFromString;\n\nfunction intArrayToString(array) {\n  var ret = [];\n  for (var i = 0; i < array.length; i++) {\n    var chr = array[i];\n    if (chr > 0xFF) {\n      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');\n      chr &= 0xFF;\n    }\n    ret.push(String.fromCharCode(chr));\n  }\n  return ret.join('');\n}\nModule[\"intArrayToString\"] = intArrayToString;\n\n// Deprecated: This function should not be called because it is unsafe and does not provide\n// a maximum length limit of how many bytes it is allowed to write. Prefer calling the\n// function stringToUTF8Array() instead, which takes in a maximum length that can be used\n// to be secure from out of bounds writes.\n/** @deprecated */\nfunction writeStringToMemory(string, buffer, dontAddNull) {\n  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');\n\n  var /** @type {number} */ lastChar, /** @type {number} */ end;\n  if (dontAddNull) {\n    // stringToUTF8Array always appends null. If we don't want to do that, remember the\n    // character that existed at the location where the null will be placed, and restore\n    // that after the write (below).\n    end = buffer + lengthBytesUTF8(string);\n    lastChar = HEAP8[end];\n  }\n  stringToUTF8(string, buffer, Infinity);\n  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.\n}\nModule[\"writeStringToMemory\"] = writeStringToMemory;\n\nfunction writeArrayToMemory(array, buffer) {\n  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')\n  HEAP8.set(array, buffer);\n}\nModule[\"writeArrayToMemory\"] = writeArrayToMemory;\n\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n  for (var i = 0; i < str.length; ++i) {\n    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);\n    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);\n  }\n  // Null-terminate the pointer to the HEAP.\n  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;\n}\nModule[\"writeAsciiToMemory\"] = writeAsciiToMemory;\n\nfunction unSign(value, bits, ignore) {\n  if (value >= 0) {\n    return value;\n  }\n  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts\n                    : Math.pow(2, bits)         + value;\n}\nfunction reSign(value, bits, ignore) {\n  if (value <= 0) {\n    return value;\n  }\n  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32\n                        : Math.pow(2, bits-1);\n  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that\n                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors\n                                                       // TODO: In i64 mode 1, resign the two parts separately and safely\n    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts\n  }\n  return value;\n}\n\n\n// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )\nif (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {\n  var ah  = a >>> 16;\n  var al = a & 0xffff;\n  var bh  = b >>> 16;\n  var bl = b & 0xffff;\n  return (al*bl + ((ah*bl + al*bh) << 16))|0;\n};\nMath.imul = Math['imul'];\n\nif (!Math['fround']) {\n  var froundBuffer = new Float32Array(1);\n  Math['fround'] = function(x) { froundBuffer[0] = x; return froundBuffer[0] };\n}\nMath.fround = Math['fround'];\n\nif (!Math['clz32']) Math['clz32'] = function(x) {\n  x = x >>> 0;\n  for (var i = 0; i < 32; i++) {\n    if (x & (1 << (31 - i))) return i;\n  }\n  return 32;\n};\nMath.clz32 = Math['clz32']\n\nif (!Math['trunc']) Math['trunc'] = function(x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\n};\nMath.trunc = Math['trunc'];\n\nvar Math_abs = Math.abs;\nvar Math_cos = Math.cos;\nvar Math_sin = Math.sin;\nvar Math_tan = Math.tan;\nvar Math_acos = Math.acos;\nvar Math_asin = Math.asin;\nvar Math_atan = Math.atan;\nvar Math_atan2 = Math.atan2;\nvar Math_exp = Math.exp;\nvar Math_log = Math.log;\nvar Math_sqrt = Math.sqrt;\nvar Math_ceil = Math.ceil;\nvar Math_floor = Math.floor;\nvar Math_pow = Math.pow;\nvar Math_imul = Math.imul;\nvar Math_fround = Math.fround;\nvar Math_round = Math.round;\nvar Math_min = Math.min;\nvar Math_clz32 = Math.clz32;\nvar Math_trunc = Math.trunc;\n\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// PRE_RUN_ADDITIONS (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function() {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            Module.printErr('still waiting on run dependencies:');\n          }\n          Module.printErr('dependency: ' + dep);\n        }\n        if (shown) {\n          Module.printErr('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    Module.printErr('warning: run dependency added without ID');\n  }\n}\nModule[\"addRunDependency\"] = addRunDependency;\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    Module.printErr('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\nModule[\"removeRunDependency\"] = removeRunDependency;\n\nModule[\"preloadedImages\"] = {}; // maps url to image data\nModule[\"preloadedAudios\"] = {}; // maps url to audio data\n\n\n\nvar memoryInitializer = null;\n\n\n\nvar /* show errors on likely calls to FS when it was not included */ FS = {\n  error: function() {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1');\n  },\n  init: function() { FS.error() },\n  createDataFile: function() { FS.error() },\n  createPreloadedFile: function() { FS.error() },\n  createLazyFile: function() { FS.error() },\n  open: function() { FS.error() },\n  mkdev: function() { FS.error() },\n  registerDevice: function() { FS.error() },\n  analyzePath: function() { FS.error() },\n  loadFilesFromDB: function() { FS.error() },\n\n  ErrnoError: function ErrnoError() { FS.error() },\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n\nfunction integrateWasmJS(Module) {\n  // wasm.js has several methods for creating the compiled code module here:\n  //  * 'native-wasm' : use native WebAssembly support in the browser\n  //  * 'interpret-s-expr': load s-expression code from a .wast and interpret\n  //  * 'interpret-binary': load binary wasm and interpret\n  //  * 'interpret-asm2wasm': load asm.js code, translate to wasm, and interpret\n  //  * 'asmjs': no wasm, just load the asm.js code and use that (good for testing)\n  // The method can be set at compile time (BINARYEN_METHOD), or runtime by setting Module['wasmJSMethod'].\n  // The method can be a comma-separated list, in which case, we will try the\n  // options one by one. Some of them can fail gracefully, and then we can try\n  // the next.\n\n  // inputs\n\n  var method = Module['wasmJSMethod'] || 'native-wasm';\n  Module['wasmJSMethod'] = method;\n\n  var wasmTextFile = Module['wasmTextFile'] || 'turbosortc.wast';\n  var wasmBinaryFile = Module['wasmBinaryFile'] || 'turbosortc.wasm';\n  var asmjsCodeFile = Module['asmjsCodeFile'] || 'turbosortc.temp.asm.js';\n\n  if (typeof Module['locateFile'] === 'function') {\n    wasmTextFile = Module['locateFile'](wasmTextFile);\n    wasmBinaryFile = Module['locateFile'](wasmBinaryFile);\n    asmjsCodeFile = Module['locateFile'](asmjsCodeFile);\n  }\n\n  // utilities\n\n  var wasmPageSize = 64*1024;\n\n  var asm2wasmImports = { // special asm2wasm imports\n    \"f64-rem\": function(x, y) {\n      return x % y;\n    },\n    \"f64-to-int\": function(x) {\n      return x | 0;\n    },\n    \"i32s-div\": function(x, y) {\n      return ((x | 0) / (y | 0)) | 0;\n    },\n    \"i32u-div\": function(x, y) {\n      return ((x >>> 0) / (y >>> 0)) >>> 0;\n    },\n    \"i32s-rem\": function(x, y) {\n      return ((x | 0) % (y | 0)) | 0;\n    },\n    \"i32u-rem\": function(x, y) {\n      return ((x >>> 0) % (y >>> 0)) >>> 0;\n    },\n    \"debugger\": function() {\n      debugger;\n    },\n  };\n\n  var info = {\n    'global': null,\n    'env': null,\n    'asm2wasm': asm2wasmImports,\n    'parent': Module // Module inside wasm-js.cpp refers to wasm-js.cpp; this allows access to the outside program.\n  };\n\n  var exports = null;\n\n  function lookupImport(mod, base) {\n    var lookup = info;\n    if (mod.indexOf('.') < 0) {\n      lookup = (lookup || {})[mod];\n    } else {\n      var parts = mod.split('.');\n      lookup = (lookup || {})[parts[0]];\n      lookup = (lookup || {})[parts[1]];\n    }\n    if (base) {\n      lookup = (lookup || {})[base];\n    }\n    if (lookup === undefined) {\n      abort('bad lookupImport to (' + mod + ').' + base);\n    }\n    return lookup;\n  }\n\n  function mergeMemory(newBuffer) {\n    // The wasm instance creates its memory. But static init code might have written to\n    // buffer already, including the mem init file, and we must copy it over in a proper merge.\n    // TODO: avoid this copy, by avoiding such static init writes\n    // TODO: in shorter term, just copy up to the last static init write\n    var oldBuffer = Module['buffer'];\n    if (newBuffer.byteLength < oldBuffer.byteLength) {\n      Module['printErr']('the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here');\n    }\n    var oldView = new Int8Array(oldBuffer);\n    var newView = new Int8Array(newBuffer);\n\n    // If we have a mem init file, do not trample it\n    if (!memoryInitializer) {\n      oldView.set(newView.subarray(Module['STATIC_BASE'], Module['STATIC_BASE'] + Module['STATIC_BUMP']), Module['STATIC_BASE']);\n    }\n\n    newView.set(oldView);\n    updateGlobalBuffer(newBuffer);\n    updateGlobalBufferViews();\n  }\n\n  var WasmTypes = {\n    none: 0,\n    i32: 1,\n    i64: 2,\n    f32: 3,\n    f64: 4\n  };\n\n  function fixImports(imports) {\n    if (!0) return imports;\n    var ret = {};\n    for (var i in imports) {\n      var fixed = i;\n      if (fixed[0] == '_') fixed = fixed.substr(1);\n      ret[fixed] = imports[i];\n    }\n    return ret;\n  }\n\n  function getBinary() {\n    try {\n      var binary;\n      if (Module['wasmBinary']) {\n        binary = Module['wasmBinary'];\n        binary = new Uint8Array(binary);\n      } else if (Module['readBinary']) {\n        binary = Module['readBinary'](wasmBinaryFile);\n      } else {\n        throw \"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)\";\n      }\n      return binary;\n    }\n    catch (err) {\n      abort(err);\n    }\n  }\n\n  function getBinaryPromise() {\n    // if we don't have the binary yet, and have the Fetch api, use that\n    if (!Module['wasmBinary'] && typeof fetch === 'function') {\n      return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      });\n    }\n    // Otherwise, getBinary should be able to get it synchronously\n    return new Promise(function(resolve, reject) {\n      resolve(getBinary());\n    });\n  }\n\n  // do-method functions\n\n  function doJustAsm(global, env, providedBuffer) {\n    // if no Module.asm, or it's the method handler helper (see below), then apply\n    // the asmjs\n    if (typeof Module['asm'] !== 'function' || Module['asm'] === methodHandler) {\n      if (!Module['asmPreload']) {\n        // you can load the .asm.js file before this, to avoid this sync xhr and eval\n        eval(Module['read'](asmjsCodeFile)); // set Module.asm\n      } else {\n        Module['asm'] = Module['asmPreload'];\n      }\n    }\n    if (typeof Module['asm'] !== 'function') {\n      Module['printErr']('asm evalling did not set the module properly');\n      return false;\n    }\n    return Module['asm'](global, env, providedBuffer);\n  }\n\n  function doNativeWasm(global, env, providedBuffer) {\n    if (typeof WebAssembly !== 'object') {\n      Module['printErr']('no native wasm support detected');\n      return false;\n    }\n    // prepare memory import\n    if (!(Module['wasmMemory'] instanceof WebAssembly.Memory)) {\n      Module['printErr']('no native wasm Memory in use');\n      return false;\n    }\n    env['memory'] = Module['wasmMemory'];\n    // Load the wasm module and create an instance of using native support in the JS engine.\n    info['global'] = {\n      'NaN': NaN,\n      'Infinity': Infinity\n    };\n    info['global.Math'] = global.Math;\n    info['env'] = env;\n    // handle a generated wasm instance, receiving its exports and\n    // performing other necessary setup\n    function receiveInstance(instance) {\n      exports = instance.exports;\n      if (exports.memory) mergeMemory(exports.memory);\n      Module['asm'] = exports;\n      Module[\"usingWasm\"] = true;\n      removeRunDependency('wasm-instantiate');\n    }\n\n    addRunDependency('wasm-instantiate'); // we can't run yet\n\n    // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n    // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\n    // to any other async startup actions they are performing.\n    if (Module['instantiateWasm']) {\n      try {\n        return Module['instantiateWasm'](info, receiveInstance);\n      } catch(e) {\n        Module['printErr']('Module.instantiateWasm callback failed with error: ' + e);\n        return false;\n      }\n    }\n\n    getBinaryPromise().then(function(binary) {\n      return WebAssembly.instantiate(binary, info)\n    }).then(function(output) {\n      // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n      receiveInstance(output['instance']);\n    }).catch(function(reason) {\n      Module['printErr']('failed to asynchronously prepare wasm: ' + reason);\n      abort(reason);\n    });\n    return {}; // no exports yet; we'll fill them in later\n  }\n\n  function doWasmPolyfill(global, env, providedBuffer, method) {\n    if (typeof WasmJS !== 'function') {\n      Module['printErr']('WasmJS not detected - polyfill not bundled?');\n      return false;\n    }\n\n    // Use wasm.js to polyfill and execute code in a wasm interpreter.\n    var wasmJS = WasmJS({});\n\n    // XXX don't be confused. Module here is in the outside program. wasmJS is the inner wasm-js.cpp.\n    wasmJS['outside'] = Module; // Inside wasm-js.cpp, Module['outside'] reaches the outside module.\n\n    // Information for the instance of the module.\n    wasmJS['info'] = info;\n\n    wasmJS['lookupImport'] = lookupImport;\n\n    assert(providedBuffer === Module['buffer']); // we should not even need to pass it as a 3rd arg for wasm, but that's the asm.js way.\n\n    info.global = global;\n    info.env = env;\n\n    // polyfill interpreter expects an ArrayBuffer\n    assert(providedBuffer === Module['buffer']);\n    env['memory'] = providedBuffer;\n    assert(env['memory'] instanceof ArrayBuffer);\n\n    wasmJS['providedTotalMemory'] = Module['buffer'].byteLength;\n\n    // Prepare to generate wasm, using either asm2wasm or s-exprs\n    var code;\n    if (method === 'interpret-binary') {\n      code = getBinary();\n    } else {\n      code = Module['read'](method == 'interpret-asm2wasm' ? asmjsCodeFile : wasmTextFile);\n    }\n    var temp;\n    if (method == 'interpret-asm2wasm') {\n      temp = wasmJS['_malloc'](code.length + 1);\n      wasmJS['writeAsciiToMemory'](code, temp);\n      wasmJS['_load_asm2wasm'](temp);\n    } else if (method === 'interpret-s-expr') {\n      temp = wasmJS['_malloc'](code.length + 1);\n      wasmJS['writeAsciiToMemory'](code, temp);\n      wasmJS['_load_s_expr2wasm'](temp);\n    } else if (method === 'interpret-binary') {\n      temp = wasmJS['_malloc'](code.length);\n      wasmJS['HEAPU8'].set(code, temp);\n      wasmJS['_load_binary2wasm'](temp, code.length);\n    } else {\n      throw 'what? ' + method;\n    }\n    wasmJS['_free'](temp);\n\n    wasmJS['_instantiate'](temp);\n\n    if (Module['newBuffer']) {\n      mergeMemory(Module['newBuffer']);\n      Module['newBuffer'] = null;\n    }\n\n    exports = wasmJS['asmExports'];\n\n    return exports;\n  }\n\n  // We may have a preloaded value in Module.asm, save it\n  Module['asmPreload'] = Module['asm'];\n\n  // Memory growth integration code\n\n  var asmjsReallocBuffer = Module['reallocBuffer'];\n\n  var wasmReallocBuffer = function(size) {\n    var PAGE_MULTIPLE = Module[\"usingWasm\"] ? WASM_PAGE_SIZE : ASMJS_PAGE_SIZE; // In wasm, heap size must be a multiple of 64KB. In asm.js, they need to be multiples of 16MB.\n    size = alignUp(size, PAGE_MULTIPLE); // round up to wasm page size\n    var old = Module['buffer'];\n    var oldSize = old.byteLength;\n    if (Module[\"usingWasm\"]) {\n      // native wasm support\n      try {\n        var result = Module['wasmMemory'].grow((size - oldSize) / wasmPageSize); // .grow() takes a delta compared to the previous size\n        if (result !== (-1 | 0)) {\n          // success in native wasm memory growth, get the buffer from the memory\n          return Module['buffer'] = Module['wasmMemory'].buffer;\n        } else {\n          return null;\n        }\n      } catch(e) {\n        console.error('Module.reallocBuffer: Attempted to grow from ' + oldSize  + ' bytes to ' + size + ' bytes, but got error: ' + e);\n        return null;\n      }\n    } else {\n      // wasm interpreter support\n      exports['__growWasmMemory']((size - oldSize) / wasmPageSize); // tiny wasm method that just does grow_memory\n      // in interpreter, we replace Module.buffer if we allocate\n      return Module['buffer'] !== old ? Module['buffer'] : null; // if it was reallocated, it changed\n    }\n  };\n\n  Module['reallocBuffer'] = function(size) {\n    if (finalMethod === 'asmjs') {\n      return asmjsReallocBuffer(size);\n    } else {\n      return wasmReallocBuffer(size);\n    }\n  };\n\n  // we may try more than one; this is the final one, that worked and we are using\n  var finalMethod = '';\n\n  // Provide an \"asm.js function\" for the application, called to \"link\" the asm.js module. We instantiate\n  // the wasm module at that time, and it receives imports and provides exports and so forth, the app\n  // doesn't need to care that it is wasm or olyfilled wasm or asm.js.\n\n  Module['asm'] = function(global, env, providedBuffer) {\n    global = fixImports(global);\n    env = fixImports(env);\n\n    // import table\n    if (!env['table']) {\n      var TABLE_SIZE = Module['wasmTableSize'];\n      if (TABLE_SIZE === undefined) TABLE_SIZE = 1024; // works in binaryen interpreter at least\n      var MAX_TABLE_SIZE = Module['wasmMaxTableSize'];\n      if (typeof WebAssembly === 'object' && typeof WebAssembly.Table === 'function') {\n        if (MAX_TABLE_SIZE !== undefined) {\n          env['table'] = new WebAssembly.Table({ 'initial': TABLE_SIZE, 'maximum': MAX_TABLE_SIZE, 'element': 'anyfunc' });\n        } else {\n          env['table'] = new WebAssembly.Table({ 'initial': TABLE_SIZE, element: 'anyfunc' });\n        }\n      } else {\n        env['table'] = new Array(TABLE_SIZE); // works in binaryen interpreter at least\n      }\n      Module['wasmTable'] = env['table'];\n    }\n\n    if (!env['memoryBase']) {\n      env['memoryBase'] = Module['STATIC_BASE']; // tell the memory segments where to place themselves\n    }\n    if (!env['tableBase']) {\n      env['tableBase'] = 0; // table starts at 0 by default, in dynamic linking this will change\n    }\n\n    // try the methods. each should return the exports if it succeeded\n\n    var exports;\n    var methods = method.split(',');\n\n    for (var i = 0; i < methods.length; i++) {\n      var curr = methods[i];\n\n\n      finalMethod = curr;\n\n      if (curr === 'native-wasm') {\n        if (exports = doNativeWasm(global, env, providedBuffer)) break;\n      } else if (curr === 'asmjs') {\n        if (exports = doJustAsm(global, env, providedBuffer)) break;\n      } else if (curr === 'interpret-asm2wasm' || curr === 'interpret-s-expr' || curr === 'interpret-binary') {\n        if (exports = doWasmPolyfill(global, env, providedBuffer, curr)) break;\n      } else {\n        abort('bad method: ' + curr);\n      }\n    }\n\n    if (!exports) throw 'no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https://github.com/kripken/emscripten/wiki/WebAssembly#binaryen-methods';\n\n\n    return exports;\n  };\n\n  var methodHandler = Module['asm']; // note our method handler, as we may modify Module['asm'] later\n}\n\nintegrateWasmJS(Module);\n\n// === Body ===\n\nvar ASM_CONSTS = [];\n\n\n\n\nSTATIC_BASE = Runtime.GLOBAL_BASE;\n\nSTATICTOP = STATIC_BASE + 5488;\n/* global initializers */  __ATINIT__.push();\n\n\nmemoryInitializer = Module[\"wasmJSMethod\"].indexOf(\"asmjs\") >= 0 || Module[\"wasmJSMethod\"].indexOf(\"interpret-asm2wasm\") >= 0 ? \"turbosortc.html.mem\" : null;\n\n\n\n\nvar STATIC_BUMP = 5488;\nModule[\"STATIC_BASE\"] = STATIC_BASE;\nModule[\"STATIC_BUMP\"] = STATIC_BUMP;\n\n/* no memory initializer */\nvar tempDoublePtr = STATICTOP; STATICTOP += 16;\n\nassert(tempDoublePtr % 8 == 0);\n\nfunction copyTempFloat(ptr) { // functions, because inlining this code increases code size too much\n\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n\n}\n\nfunction copyTempDouble(ptr) {\n\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n\n  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];\n\n  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];\n\n  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];\n\n  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];\n\n}\n\n// {{PRE_LIBRARY}}\n\n\n  \n  function ___setErrNo(value) {\n      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;\n      else Module.printErr('failed to set errno from JS');\n      return value;\n    } \n  Module[\"_sbrk\"] = _sbrk;\n\n   \n  Module[\"_memset\"] = _memset;\n\n  function ___lock() {}\n\n  \n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);\n      return dest;\n    } \n  Module[\"_memcpy\"] = _memcpy;\n\n  function _abort() {\n      Module['abort']();\n    }\n\n   \n  Module[\"_llvm_bswap_i32\"] = _llvm_bswap_i32;\n\n  \n  var SYSCALLS={varargs:0,get:function (varargs) {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function () {\n        var ret = Pointer_stringify(SYSCALLS.get());\n        return ret;\n      },get64:function () {\n        var low = SYSCALLS.get(), high = SYSCALLS.get();\n        if (low >= 0) assert(high === 0);\n        else assert(high === -1);\n        return low;\n      },getZero:function () {\n        assert(SYSCALLS.get() === 0);\n      }};function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // llseek\n      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();\n      // NOTE: offset_high is unused - Emscripten's off_t is 32-bit\n      var offset = offset_low;\n      FS.llseek(stream, offset, whence);\n      HEAP32[((result)>>2)]=stream.position;\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // writev\n      // hack to support printf in NO_FILESYSTEM\n      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();\n      var ret = 0;\n      if (!___syscall146.buffer) {\n        ___syscall146.buffers = [null, [], []]; // 1 => stdout, 2 => stderr\n        ___syscall146.printChar = function(stream, curr) {\n          var buffer = ___syscall146.buffers[stream];\n          assert(buffer);\n          if (curr === 0 || curr === 10) {\n            (stream === 1 ? Module['print'] : Module['printErr'])(UTF8ArrayToString(buffer, 0));\n            buffer.length = 0;\n          } else {\n            buffer.push(curr);\n          }\n        };\n      }\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAP32[(((iov)+(i*8))>>2)];\n        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\n        for (var j = 0; j < len; j++) {\n          ___syscall146.printChar(stream, HEAPU8[ptr+j]);\n        }\n        ret += len;\n      }\n      return ret;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // ioctl\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___unlock() {}\n\n  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // close\n      var stream = SYSCALLS.getStreamFromFD();\n      FS.close(stream);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n/* flush anything remaining in the buffer during shutdown */ __ATEXIT__.push(function() { var fflush = Module[\"_fflush\"]; if (fflush) fflush(0); var printChar = ___syscall146.printChar; if (!printChar) return; var buffers = ___syscall146.buffers; if (buffers[1].length) printChar(1, 10); if (buffers[2].length) printChar(2, 10); });;\nDYNAMICTOP_PTR = allocate(1, \"i32\", ALLOC_STATIC);\n\nSTACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);\n\nSTACK_MAX = STACK_BASE + TOTAL_STACK;\n\nDYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);\n\nHEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;\n\nstaticSealed = true; // seal the static portion of memory\n\nassert(DYNAMIC_BASE < TOTAL_MEMORY, \"TOTAL_MEMORY not big enough for stack\");\n\n\nfunction nullFunc_ii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_iiii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nModule['wasmTableSize'] = 10;\n\nModule['wasmMaxTableSize'] = 10;\n\nfunction invoke_ii(index,a1) {\n  try {\n    return Module[\"dynCall_ii\"](index,a1);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    Module[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_iiii(index,a1,a2,a3) {\n  try {\n    return Module[\"dynCall_iiii\"](index,a1,a2,a3);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    Module[\"setThrew\"](1, 0);\n  }\n}\n\nModule.asmGlobalArg = { \"Math\": Math, \"Int8Array\": Int8Array, \"Int16Array\": Int16Array, \"Int32Array\": Int32Array, \"Uint8Array\": Uint8Array, \"Uint16Array\": Uint16Array, \"Uint32Array\": Uint32Array, \"Float32Array\": Float32Array, \"Float64Array\": Float64Array, \"NaN\": NaN, \"Infinity\": Infinity };\n\nModule.asmLibraryArg = { \"abort\": abort, \"assert\": assert, \"enlargeMemory\": enlargeMemory, \"getTotalMemory\": getTotalMemory, \"abortOnCannotGrowMemory\": abortOnCannotGrowMemory, \"abortStackOverflow\": abortStackOverflow, \"nullFunc_ii\": nullFunc_ii, \"nullFunc_iiii\": nullFunc_iiii, \"invoke_ii\": invoke_ii, \"invoke_iiii\": invoke_iiii, \"___lock\": ___lock, \"___syscall6\": ___syscall6, \"___setErrNo\": ___setErrNo, \"_abort\": _abort, \"___syscall140\": ___syscall140, \"_emscripten_memcpy_big\": _emscripten_memcpy_big, \"___syscall54\": ___syscall54, \"___unlock\": ___unlock, \"___syscall146\": ___syscall146, \"DYNAMICTOP_PTR\": DYNAMICTOP_PTR, \"tempDoublePtr\": tempDoublePtr, \"ABORT\": ABORT, \"STACKTOP\": STACKTOP, \"STACK_MAX\": STACK_MAX };\n// EMSCRIPTEN_START_ASM\nvar asm =Module[\"asm\"]// EMSCRIPTEN_END_ASM\n(Module.asmGlobalArg, Module.asmLibraryArg, buffer);\n\nvar real__malloc = asm[\"_malloc\"]; asm[\"_malloc\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__malloc.apply(null, arguments);\n};\n\nvar real_getTempRet0 = asm[\"getTempRet0\"]; asm[\"getTempRet0\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_getTempRet0.apply(null, arguments);\n};\n\nvar real__turbosort = asm[\"_turbosort\"]; asm[\"_turbosort\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__turbosort.apply(null, arguments);\n};\n\nvar real__fflush = asm[\"_fflush\"]; asm[\"_fflush\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__fflush.apply(null, arguments);\n};\n\nvar real__main = asm[\"_main\"]; asm[\"_main\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__main.apply(null, arguments);\n};\n\nvar real_setTempRet0 = asm[\"setTempRet0\"]; asm[\"setTempRet0\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_setTempRet0.apply(null, arguments);\n};\n\nvar real_establishStackSpace = asm[\"establishStackSpace\"]; asm[\"establishStackSpace\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_establishStackSpace.apply(null, arguments);\n};\n\nvar real_stackSave = asm[\"stackSave\"]; asm[\"stackSave\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_stackSave.apply(null, arguments);\n};\n\nvar real__sbrk = asm[\"_sbrk\"]; asm[\"_sbrk\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__sbrk.apply(null, arguments);\n};\n\nvar real__emscripten_get_global_libc = asm[\"_emscripten_get_global_libc\"]; asm[\"_emscripten_get_global_libc\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__emscripten_get_global_libc.apply(null, arguments);\n};\n\nvar real____errno_location = asm[\"___errno_location\"]; asm[\"___errno_location\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real____errno_location.apply(null, arguments);\n};\n\nvar real_setThrew = asm[\"setThrew\"]; asm[\"setThrew\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_setThrew.apply(null, arguments);\n};\n\nvar real__free = asm[\"_free\"]; asm[\"_free\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__free.apply(null, arguments);\n};\n\nvar real_stackAlloc = asm[\"stackAlloc\"]; asm[\"stackAlloc\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_stackAlloc.apply(null, arguments);\n};\n\nvar real_stackRestore = asm[\"stackRestore\"]; asm[\"stackRestore\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_stackRestore.apply(null, arguments);\n};\n\nvar real__llvm_bswap_i32 = asm[\"_llvm_bswap_i32\"]; asm[\"_llvm_bswap_i32\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__llvm_bswap_i32.apply(null, arguments);\n};\nModule[\"asm\"] = asm;\nvar _malloc = Module[\"_malloc\"] = function() { return Module[\"asm\"][\"_malloc\"].apply(null, arguments) };\nvar getTempRet0 = Module[\"getTempRet0\"] = function() { return Module[\"asm\"][\"getTempRet0\"].apply(null, arguments) };\nvar _turbosort = Module[\"_turbosort\"] = function() { return Module[\"asm\"][\"_turbosort\"].apply(null, arguments) };\nvar _fflush = Module[\"_fflush\"] = function() { return Module[\"asm\"][\"_fflush\"].apply(null, arguments) };\nvar _main = Module[\"_main\"] = function() { return Module[\"asm\"][\"_main\"].apply(null, arguments) };\nvar setTempRet0 = Module[\"setTempRet0\"] = function() { return Module[\"asm\"][\"setTempRet0\"].apply(null, arguments) };\nvar establishStackSpace = Module[\"establishStackSpace\"] = function() { return Module[\"asm\"][\"establishStackSpace\"].apply(null, arguments) };\nvar stackSave = Module[\"stackSave\"] = function() { return Module[\"asm\"][\"stackSave\"].apply(null, arguments) };\nvar _memset = Module[\"_memset\"] = function() { return Module[\"asm\"][\"_memset\"].apply(null, arguments) };\nvar _sbrk = Module[\"_sbrk\"] = function() { return Module[\"asm\"][\"_sbrk\"].apply(null, arguments) };\nvar _emscripten_get_global_libc = Module[\"_emscripten_get_global_libc\"] = function() { return Module[\"asm\"][\"_emscripten_get_global_libc\"].apply(null, arguments) };\nvar _memcpy = Module[\"_memcpy\"] = function() { return Module[\"asm\"][\"_memcpy\"].apply(null, arguments) };\nvar ___errno_location = Module[\"___errno_location\"] = function() { return Module[\"asm\"][\"___errno_location\"].apply(null, arguments) };\nvar setThrew = Module[\"setThrew\"] = function() { return Module[\"asm\"][\"setThrew\"].apply(null, arguments) };\nvar _free = Module[\"_free\"] = function() { return Module[\"asm\"][\"_free\"].apply(null, arguments) };\nvar stackAlloc = Module[\"stackAlloc\"] = function() { return Module[\"asm\"][\"stackAlloc\"].apply(null, arguments) };\nvar stackRestore = Module[\"stackRestore\"] = function() { return Module[\"asm\"][\"stackRestore\"].apply(null, arguments) };\nvar _llvm_bswap_i32 = Module[\"_llvm_bswap_i32\"] = function() { return Module[\"asm\"][\"_llvm_bswap_i32\"].apply(null, arguments) };\nvar runPostSets = Module[\"runPostSets\"] = function() { return Module[\"asm\"][\"runPostSets\"].apply(null, arguments) };\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() { return Module[\"asm\"][\"dynCall_ii\"].apply(null, arguments) };\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() { return Module[\"asm\"][\"dynCall_iiii\"].apply(null, arguments) };\n;\nRuntime.stackAlloc = Module['stackAlloc'];\nRuntime.stackSave = Module['stackSave'];\nRuntime.stackRestore = Module['stackRestore'];\nRuntime.establishStackSpace = Module['establishStackSpace'];\nRuntime.setTempRet0 = Module['setTempRet0'];\nRuntime.getTempRet0 = Module['getTempRet0'];\n\n\n// === Auto-generated postamble setup entry stuff ===\n\nModule['asm'] = asm;\n\n\n\nif (memoryInitializer) {\n  if (typeof Module['locateFile'] === 'function') {\n    memoryInitializer = Module['locateFile'](memoryInitializer);\n  } else if (Module['memoryInitializerPrefixURL']) {\n    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;\n  }\n  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {\n    var data = Module['readBinary'](memoryInitializer);\n    HEAPU8.set(data, Runtime.GLOBAL_BASE);\n  } else {\n    addRunDependency('memory initializer');\n    var applyMemoryInitializer = function(data) {\n      if (data.byteLength) data = new Uint8Array(data);\n      for (var i = 0; i < data.length; i++) {\n        assert(HEAPU8[Runtime.GLOBAL_BASE + i] === 0, \"area for memory initializer should not have been touched before it's loaded\");\n      }\n      HEAPU8.set(data, Runtime.GLOBAL_BASE);\n      // Delete the typed array that contains the large blob of the memory initializer request response so that\n      // we won't keep unnecessary memory lying around. However, keep the XHR object itself alive so that e.g.\n      // its .status field can still be accessed later.\n      if (Module['memoryInitializerRequest']) delete Module['memoryInitializerRequest'].response;\n      removeRunDependency('memory initializer');\n    }\n    function doBrowserLoad() {\n      Module['readAsync'](memoryInitializer, applyMemoryInitializer, function() {\n        throw 'could not load memory initializer ' + memoryInitializer;\n      });\n    }\n    if (Module['memoryInitializerRequest']) {\n      // a network request has already been created, just use that\n      function useRequest() {\n        var request = Module['memoryInitializerRequest'];\n        if (request.status !== 200 && request.status !== 0) {\n          // If you see this warning, the issue may be that you are using locateFile or memoryInitializerPrefixURL, and defining them in JS. That\n          // means that the HTML file doesn't know about them, and when it tries to create the mem init request early, does it to the wrong place.\n          // Look in your browser's devtools network console to see what's going on.\n          console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status + ', retrying ' + memoryInitializer);\n          doBrowserLoad();\n          return;\n        }\n        applyMemoryInitializer(request.response);\n      }\n      if (Module['memoryInitializerRequest'].response) {\n        setTimeout(useRequest, 0); // it's already here; but, apply it asynchronously\n      } else {\n        Module['memoryInitializerRequest'].addEventListener('load', useRequest); // wait for it\n      }\n    } else {\n      // fetch it from the network ourselves\n      doBrowserLoad();\n    }\n  }\n}\n\n\n\n/**\n * @constructor\n * @extends {Error}\n */\nfunction ExitStatus(status) {\n  this.name = \"ExitStatus\";\n  this.message = \"Program terminated with exit(\" + status + \")\";\n  this.status = status;\n};\nExitStatus.prototype = new Error();\nExitStatus.prototype.constructor = ExitStatus;\n\nvar initialStackTop;\nvar preloadStartTime = null;\nvar calledMain = false;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!Module['calledRun']) run();\n  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n}\n\nModule['callMain'] = Module.callMain = function callMain(args) {\n  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');\n  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');\n\n  args = args || [];\n\n  ensureInitRuntime();\n\n  var argc = args.length+1;\n  function pad() {\n    for (var i = 0; i < 4-1; i++) {\n      argv.push(0);\n    }\n  }\n  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];\n  pad();\n  for (var i = 0; i < argc-1; i = i + 1) {\n    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));\n    pad();\n  }\n  argv.push(0);\n  argv = allocate(argv, 'i32', ALLOC_NORMAL);\n\n\n  try {\n\n    var ret = Module['_main'](argc, argv, 0);\n\n\n    // if we're not running an evented main loop, it's time to exit\n    exit(ret, /* implicit = */ true);\n  }\n  catch(e) {\n    if (e instanceof ExitStatus) {\n      // exit() throws this once it's done to make sure execution\n      // has been stopped completely\n      return;\n    } else if (e == 'SimulateInfiniteLoop') {\n      // running an evented main loop, don't immediately exit\n      Module['noExitRuntime'] = true;\n      return;\n    } else {\n      var toLog = e;\n      if (e && typeof e === 'object' && e.stack) {\n        toLog = [e, e.stack];\n      }\n      Module.printErr('exception thrown: ' + toLog);\n      Module['quit'](1, e);\n    }\n  } finally {\n    calledMain = true;\n  }\n}\n\n\n\n\n/** @type {function(Array=)} */\nfunction run(args) {\n  args = args || Module['arguments'];\n\n  if (preloadStartTime === null) preloadStartTime = Date.now();\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n  writeStackCookie();\n\n  preRun();\n\n  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later\n  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame\n\n  function doRun() {\n    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    ensureInitRuntime();\n\n    preMain();\n\n    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {\n      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');\n    }\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    if (Module['_main'] && shouldRunNow) Module['callMain'](args);\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else {\n    doRun();\n  }\n  checkStackCookie();\n}\nModule['run'] = Module.run = run;\n\nfunction exit(status, implicit) {\n  if (implicit && Module['noExitRuntime']) {\n    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');\n    return;\n  }\n\n  if (Module['noExitRuntime']) {\n    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');\n  } else {\n\n    ABORT = true;\n    EXITSTATUS = status;\n    STACKTOP = initialStackTop;\n\n    exitRuntime();\n\n    if (Module['onExit']) Module['onExit'](status);\n  }\n\n  if (ENVIRONMENT_IS_NODE) {\n    process['exit'](status);\n  }\n  Module['quit'](status, new ExitStatus(status));\n}\nModule['exit'] = Module.exit = exit;\n\nvar abortDecorators = [];\n\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  if (what !== undefined) {\n    Module.print(what);\n    Module.printErr(what);\n    what = JSON.stringify(what)\n  } else {\n    what = '';\n  }\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  var extra = '';\n\n  var output = 'abort(' + what + ') at ' + stackTrace() + extra;\n  if (abortDecorators) {\n    abortDecorators.forEach(function(decorator) {\n      output = decorator(output, what);\n    });\n  }\n  throw output;\n}\nModule['abort'] = Module.abort = abort;\n\n// {{PRE_RUN_ADDITIONS}}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n// shouldRunNow refers to calling main(), not run().\nvar shouldRunNow = true;\nif (Module['noInitialRun']) {\n  shouldRunNow = false;\n}\n\n\nrun();\n\n// {{POST_RUN_ADDITIONS}}\n\n\n\n\n\n// {{MODULE_ADDITIONS}}\n\n\n\n"]}